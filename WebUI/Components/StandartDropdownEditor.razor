@typeparam TItem
@inherits InputBase<TItem>

@code {
    /// <summary>
    ///     Назвавание элемента
    /// </summary>
    [Parameter]
    public string Name { get; set; }

    /// <summary>
    ///     Элементы в выпадающем списке
    /// </summary>
    [Parameter]
    public TItem[] Items { get; set; }

    /// <summary>
    ///     Функция выводящая названия элементов списка
    /// </summary>
    [Parameter]
    public Func<TItem, string> ItemsText { get; set; } = _ => _.ToString();

    /// <summary>
    ///     Обработчик выбора элемента в списке
    /// </summary>
    private async Task OnClickHandle(TItem selection)
    {
        Value = selection;
        await ValueChanged.InvokeAsync(Value);
    }

    protected override bool TryParseValueFromString(string value, out TItem result, out string validationErrorMessage)
    {
        throw new NotImplementedException();
    }
}

<div class="container">
    <div class="row mt-2">
        <div class="col">
            <input type="button" disabled class="btn btn-light text-nowrap text-black font-weight-bold" value="@Name:" readonly>
        </div>

        <div class="col">
            <div class="btn-group group">
                <input type="button" disabled class="btn btn-light text-nowrap text-black" value="@(ItemsText(Value))" readonly>

                <div class="dropdown">
                    <button class="btn btn-sm btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown"
                            aria-haspopup="true" aria-expanded="false" />
                    <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        @for (var i = 0; i < Items.Length; i++)
                        {
                            var item = Items[i];
                            <a class="dropdown-item form-label" @onclick="@(() => OnClickHandle(item))">
                                @ItemsText(item)
                            </a>
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>



