@inject NavigationManager NavigationManager

@code {

    /// <summary>
    /// Общее кол-во элементов
    /// </summary>
    [Parameter]
    public int TotalCount { get; set; }

    /// <summary>
    /// Кол-во элементов на 1ой странице
    /// </summary>
    [Parameter]
    public int PageSize { get; set; }

    /// <summary>
    /// Кол-во страниц для показа
    /// </summary>
    [Parameter]
    public int CountLinksToShow { get; set; } = 20;

    /// <summary>
    /// Активная страница
    /// </summary>
    [Parameter]
    public int ActivePage { get; set; }

    /// <summary>
    /// Осуществляет переход по страницам
    /// </summary>
    void NavigateToPage(int page)
    {
        var url = NavigationManager.Uri.SetQueryParam("page", page);
        NavigationManager.NavigateTo(url);
    }
}

@{
    var allPagesCount = (int)Math.Ceiling((double)TotalCount / PageSize);

    var pagesToShow = ActivePage + CountLinksToShow / 2; 
    var pageCount = pagesToShow < allPagesCount ? pagesToShow : allPagesCount; // определяю правую границу интервала страниц

    var showFirst = (ActivePage - CountLinksToShow / 2) > 1; // показывать ли переход к первой странице
    var showLast = (ActivePage + CountLinksToShow / 2) < allPagesCount; // показывать ли переход к последеней странице

    // определяю левую границу интервала страниц
    var startPage = ActivePage - CountLinksToShow / 2;
    startPage = startPage > 1 ? startPage : 1;
    if (startPage < CountLinksToShow && CountLinksToShow < allPagesCount)
    {
        pageCount = startPage + CountLinksToShow;
    }

    if (startPage + CountLinksToShow > allPagesCount && CountLinksToShow < allPagesCount)
    {
        startPage = allPagesCount - CountLinksToShow;
    }
}


@if (TotalCount > 0 && TotalCount > PageSize)
{
    <div class="my-2 text-left">
        <div class="btn-group" role="group">
            @if (showFirst)
            {
                <input type="button" value="1" class="btn btn-sm btn-outline-primary" @onclick="@(()=>NavigateToPage(1))">
            }

            @{
                var skipLeftMany = ActivePage - CountLinksToShow / 2;
                var skipLeftOne = ActivePage - 1;
            }
            <input type="button" value="<<" class="btn btn-sm btn-outline-primary" @onclick="@(()=>NavigateToPage(skipLeftMany< 1 ? 1 : skipLeftMany))">
            <input type="button" value="<" class="btn btn-sm btn-outline-primary" @onclick="@(()=>NavigateToPage(skipLeftOne < 1 ? 1 : skipLeftOne))">

            @for (var page = startPage; page <= pageCount; page++)
            {
                var isActive = page == ActivePage;
                var text = $"{page}";
                var linkPage = page;
                <input type="button" value="@text" class="btn btn-sm @(isActive ? "btn-primary":"btn-outline-primary")" @onclick="@(()=>NavigateToPage(linkPage))">
            }

            @{
                var skipRightMany = ActivePage + CountLinksToShow / 2;
                var skipRightOne = ActivePage + 1;
            }
            <input type="button" value=">" class="btn btn-sm btn-outline-primary" @onclick="@(()=>NavigateToPage(skipRightOne < allPagesCount ? skipRightOne : allPagesCount))">
            <input type="button" value=">>" class="btn btn-sm btn-outline-primary" @onclick="@(()=>NavigateToPage(skipRightMany < allPagesCount ? skipRightMany : allPagesCount))">
            @if (showLast)
            {
                <input type="button" value="@allPagesCount" class="btn btn-sm btn-outline-primary" @onclick="@(()=>NavigateToPage(allPagesCount))">
            }
        </div>
    </div>
}
