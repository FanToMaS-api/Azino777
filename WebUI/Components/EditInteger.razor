@inherits InputBase<int>

@code {

    /// <summary>
    ///     Имя параметра
    /// </summary>
    [Parameter]
    public string Name { get; set; }

    private string _value;

    /// <summary>
    ///     Значение параметра
    /// </summary>
    [Parameter]
    public string ValueStr
    {
        get => _value;
        set => SetValue(value);
    }

    protected override void OnInitialized()
    {
        ValueStr = Value.ToString();
        base.OnInitialized();
    }

    /// <summary>
    ///     Устанавливает значение
    /// </summary>
    public void SetValue(string value)
    {
        if (int.TryParse(value, out var res))
        {
            _value = value;
            Value = res;
            ValueChanged.InvokeAsync(Value);
        }
    }

    protected override bool TryParseValueFromString(string value, out int result, out string validationErrorMessage)
    {
        throw new NotImplementedException();
    }
}

@{
    var errors = EditContext.GetValidationMessages(FieldIdentifier).ToArray();
    var isInvalid = errors.Any();
}

<div class="container-fluid @(isInvalid ? " invalid" : "")">
    <div class="row mt-2">
        <div class="col">
            <input type="button" disabled class="btn btn-light text-nowrap text-black font-weight-bold" value="@Name:" readonly>
        </div>
        <div class="col">
            <input type="text" class="form-control form-control-sm text-nowrap" @bind-value="@ValueStr">
        </div>
    </div>
</div>
